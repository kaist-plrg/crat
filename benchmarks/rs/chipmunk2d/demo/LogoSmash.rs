use ::libc;
extern "C" {
    pub type cpBody;
    pub type cpShape;
    pub type cpSpace;
    fn rand() -> libc::c_int;
    fn cpBodyNew(mass: cpFloat, moment: cpFloat) -> *mut cpBody;
    fn cpBodyGetPosition(body: *const cpBody) -> cpVect;
    fn cpBodySetPosition(body: *mut cpBody, pos: cpVect);
    fn cpBodySetVelocity(body: *mut cpBody, velocity: cpVect);
    fn cpShapeGetBody(shape: *const cpShape) -> *mut cpBody;
    fn cpShapeSetElasticity(shape: *mut cpShape, elasticity: cpFloat);
    fn cpShapeSetFriction(shape: *mut cpShape, friction: cpFloat);
    fn cpShapeSetFilter(shape: *mut cpShape, filter: cpShapeFilter);
    fn cpCircleShapeNew(
        body: *mut cpBody,
        radius: cpFloat,
        offset: cpVect,
    ) -> *mut cpShape;
    fn cpSpaceNew() -> *mut cpSpace;
    fn cpSpaceFree(space: *mut cpSpace);
    fn cpSpaceSetIterations(space: *mut cpSpace, iterations: libc::c_int);
    fn cpSpaceAddShape(space: *mut cpSpace, shape: *mut cpShape) -> *mut cpShape;
    fn cpSpaceAddBody(space: *mut cpSpace, body: *mut cpBody) -> *mut cpBody;
    fn cpSpaceEachBody(
        space: *mut cpSpace,
        func: cpSpaceBodyIteratorFunc,
        data: *mut libc::c_void,
    );
    fn cpSpaceUseSpatialHash(space: *mut cpSpace, dim: cpFloat, count: libc::c_int);
    fn cpSpaceStep(space: *mut cpSpace, dt: cpFloat);
    fn ChipmunkDemoFreeSpaceChildren(space: *mut cpSpace);
    static mut NOT_GRABBABLE_FILTER: cpShapeFilter;
    static mut ChipmunkDebugDrawPointLineScale: libc::c_float;
    fn ChipmunkDebugDrawDot(size: cpFloat, pos: cpVect, fillColor: cpSpaceDebugColor);
}
pub type uintptr_t = libc::c_ulong;
pub type cpFloat = libc::c_double;
pub type cpGroup = uintptr_t;
pub type cpBitmask = libc::c_uint;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct cpVect {
    pub x: cpFloat,
    pub y: cpFloat,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct cpShapeFilter {
    pub group: cpGroup,
    pub categories: cpBitmask,
    pub mask: cpBitmask,
}
pub type cpSpaceBodyIteratorFunc = Option::<
    unsafe extern "C" fn(*mut cpBody, *mut libc::c_void) -> (),
>;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct cpSpaceDebugColor {
    pub r: libc::c_float,
    pub g: libc::c_float,
    pub b: libc::c_float,
    pub a: libc::c_float,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct ChipmunkDemo {
    pub name: *const libc::c_char,
    pub timestep: libc::c_double,
    pub initFunc: ChipmunkDemoInitFunc,
    pub updateFunc: ChipmunkDemoUpdateFunc,
    pub drawFunc: ChipmunkDemoDrawFunc,
    pub destroyFunc: ChipmunkDemoDestroyFunc,
}
pub type ChipmunkDemoDestroyFunc = Option::<unsafe extern "C" fn(*mut cpSpace) -> ()>;
pub type ChipmunkDemoDrawFunc = Option::<unsafe extern "C" fn(*mut cpSpace) -> ()>;
pub type ChipmunkDemoUpdateFunc = Option::<
    unsafe extern "C" fn(*mut cpSpace, libc::c_double) -> (),
>;
pub type ChipmunkDemoInitFunc = Option::<unsafe extern "C" fn() -> *mut cpSpace>;
static mut cpvzero: cpVect = {
    let mut init = cpVect {
        x: 0.0f32 as cpFloat,
        y: 0.0f32 as cpFloat,
    };
    init
};
#[inline]
unsafe extern "C" fn cpv(x: cpFloat, y: cpFloat) -> cpVect {
    let mut v: cpVect = {
        let mut init = cpVect { x: x, y: y };
        init
    };
    return v;
}
#[inline]
unsafe extern "C" fn frand() -> cpFloat {
    return rand() as cpFloat / 2147483647 as libc::c_int as cpFloat;
}
#[inline]
unsafe extern "C" fn RGBAColor(
    mut r: libc::c_float,
    mut g: libc::c_float,
    mut b: libc::c_float,
    mut a: libc::c_float,
) -> cpSpaceDebugColor {
    let mut color: cpSpaceDebugColor = {
        let mut init = cpSpaceDebugColor {
            r: r,
            g: g,
            b: b,
            a: a,
        };
        init
    };
    return color;
}
static mut image_width: libc::c_int = 188 as libc::c_int;
static mut image_height: libc::c_int = 35 as libc::c_int;
static mut image_row_length: libc::c_int = 24 as libc::c_int;
static mut image_bitmap: [libc::c_uchar; 840] = [
    15 as libc::c_int as libc::c_uchar,
    -(16 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    7 as libc::c_int as libc::c_uchar,
    -(64 as libc::c_int) as libc::c_uchar,
    15 as libc::c_int as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(32 as libc::c_int) as libc::c_uchar,
    -(2 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    31 as libc::c_int as libc::c_uchar,
    -(64 as libc::c_int) as libc::c_uchar,
    15 as libc::c_int as libc::c_uchar,
    127 as libc::c_int as libc::c_uchar,
    -(125 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(128 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    127 as libc::c_int as libc::c_uchar,
    -(64 as libc::c_int) as libc::c_uchar,
    15 as libc::c_int as libc::c_uchar,
    127 as libc::c_int as libc::c_uchar,
    15 as libc::c_int as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(64 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    1 as libc::c_int as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(64 as libc::c_int) as libc::c_uchar,
    15 as libc::c_int as libc::c_uchar,
    -(2 as libc::c_int) as libc::c_uchar,
    31 as libc::c_int as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(64 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    1 as libc::c_int as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(64 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    -(4 as libc::c_int) as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(32 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    1 as libc::c_int as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(64 as libc::c_int) as libc::c_uchar,
    15 as libc::c_int as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    127 as libc::c_int as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(32 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    1 as libc::c_int as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(64 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    -(15 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(32 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    1 as libc::c_int as libc::c_uchar,
    -(31 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(64 as libc::c_int) as libc::c_uchar,
    15 as libc::c_int as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    -(32 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(32 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    7 as libc::c_int as libc::c_uchar,
    -(15 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(64 as libc::c_int) as libc::c_uchar,
    9 as libc::c_int as libc::c_uchar,
    -(15 as libc::c_int) as libc::c_uchar,
    -(32 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(32 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    31 as libc::c_int as libc::c_uchar,
    -(15 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(64 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    -(15 as libc::c_int) as libc::c_uchar,
    -(32 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(32 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(7 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(64 as libc::c_int) as libc::c_uchar,
    9 as libc::c_int as libc::c_uchar,
    -(29 as libc::c_int) as libc::c_uchar,
    -(32 as libc::c_int) as libc::c_uchar,
    127 as libc::c_int as libc::c_uchar,
    -(61 as libc::c_int) as libc::c_uchar,
    -(16 as libc::c_int) as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    15 as libc::c_int as libc::c_uchar,
    -(61 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    31 as libc::c_int as libc::c_uchar,
    -(16 as libc::c_int) as libc::c_uchar,
    15 as libc::c_int as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    126 as libc::c_int as libc::c_uchar,
    7 as libc::c_int as libc::c_uchar,
    -(31 as libc::c_int) as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    31 as libc::c_int as libc::c_uchar,
    -(65 as libc::c_int) as libc::c_uchar,
    -(7 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(64 as libc::c_int) as libc::c_uchar,
    9 as libc::c_int as libc::c_uchar,
    -(29 as libc::c_int) as libc::c_uchar,
    -(32 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    7 as libc::c_int as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    127 as libc::c_int as libc::c_uchar,
    -(97 as libc::c_int) as libc::c_uchar,
    -(25 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(2 as libc::c_int) as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    31 as libc::c_int as libc::c_uchar,
    -(4 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    15 as libc::c_int as libc::c_uchar,
    -(13 as libc::c_int) as libc::c_uchar,
    -(4 as libc::c_int) as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(3 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(64 as libc::c_int) as libc::c_uchar,
    9 as libc::c_int as libc::c_uchar,
    -(29 as libc::c_int) as libc::c_uchar,
    -(32 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    7 as libc::c_int as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    127 as libc::c_int as libc::c_uchar,
    -(97 as libc::c_int) as libc::c_uchar,
    -(25 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(2 as libc::c_int) as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    31 as libc::c_int as libc::c_uchar,
    -(4 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    15 as libc::c_int as libc::c_uchar,
    -(13 as libc::c_int) as libc::c_uchar,
    -(2 as libc::c_int) as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(3 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(64 as libc::c_int) as libc::c_uchar,
    9 as libc::c_int as libc::c_uchar,
    -(29 as libc::c_int) as libc::c_uchar,
    -(32 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    7 as libc::c_int as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    127 as libc::c_int as libc::c_uchar,
    -(97 as libc::c_int) as libc::c_uchar,
    -(25 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(4 as libc::c_int) as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(4 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    15 as libc::c_int as libc::c_uchar,
    -(13 as libc::c_int) as libc::c_uchar,
    -(2 as libc::c_int) as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(33 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(32 as libc::c_int) as libc::c_uchar,
    9 as libc::c_int as libc::c_uchar,
    -(25 as libc::c_int) as libc::c_uchar,
    -(32 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    7 as libc::c_int as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    127 as libc::c_int as libc::c_uchar,
    -(97 as libc::c_int) as libc::c_uchar,
    -(25 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(4 as libc::c_int) as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(4 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    15 as libc::c_int as libc::c_uchar,
    -(13 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(33 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(16 as libc::c_int) as libc::c_uchar,
    9 as libc::c_int as libc::c_uchar,
    -(25 as libc::c_int) as libc::c_uchar,
    -(32 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    7 as libc::c_int as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    127 as libc::c_int as libc::c_uchar,
    -(97 as libc::c_int) as libc::c_uchar,
    -(25 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(4 as libc::c_int) as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(4 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    15 as libc::c_int as libc::c_uchar,
    -(13 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(49 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    9 as libc::c_int as libc::c_uchar,
    -(57 as libc::c_int) as libc::c_uchar,
    -(32 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    7 as libc::c_int as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    127 as libc::c_int as libc::c_uchar,
    -(97 as libc::c_int) as libc::c_uchar,
    -(25 as libc::c_int) as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(2 as libc::c_int) as libc::c_uchar,
    127 as libc::c_int as libc::c_uchar,
    -(4 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    15 as libc::c_int as libc::c_uchar,
    -(13 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(65 as libc::c_int) as libc::c_uchar,
    -(49 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(4 as libc::c_int) as libc::c_uchar,
    9 as libc::c_int as libc::c_uchar,
    -(57 as libc::c_int) as libc::c_uchar,
    -(32 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    7 as libc::c_int as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    127 as libc::c_int as libc::c_uchar,
    -(97 as libc::c_int) as libc::c_uchar,
    -(25 as libc::c_int) as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(2 as libc::c_int) as libc::c_uchar,
    127 as libc::c_int as libc::c_uchar,
    -(4 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    15 as libc::c_int as libc::c_uchar,
    -(13 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(65 as libc::c_int) as libc::c_uchar,
    -(57 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(2 as libc::c_int) as libc::c_uchar,
    9 as libc::c_int as libc::c_uchar,
    -(57 as libc::c_int) as libc::c_uchar,
    -(32 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    7 as libc::c_int as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    127 as libc::c_int as libc::c_uchar,
    -(97 as libc::c_int) as libc::c_uchar,
    -(25 as libc::c_int) as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(2 as libc::c_int) as libc::c_uchar,
    127 as libc::c_int as libc::c_uchar,
    -(4 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    15 as libc::c_int as libc::c_uchar,
    -(13 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(57 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    9 as libc::c_int as libc::c_uchar,
    -(57 as libc::c_int) as libc::c_uchar,
    -(32 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    7 as libc::c_int as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(97 as libc::c_int) as libc::c_uchar,
    -(25 as libc::c_int) as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(4 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    15 as libc::c_int as libc::c_uchar,
    -(13 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(61 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(119 as libc::c_int) as libc::c_uchar,
    -(57 as libc::c_int) as libc::c_uchar,
    -(32 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    7 as libc::c_int as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(97 as libc::c_int) as libc::c_uchar,
    -(25 as libc::c_int) as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(4 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    15 as libc::c_int as libc::c_uchar,
    -(13 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(61 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(55 as libc::c_int) as libc::c_uchar,
    -(49 as libc::c_int) as libc::c_uchar,
    -(32 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    7 as libc::c_int as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(97 as libc::c_int) as libc::c_uchar,
    -(25 as libc::c_int) as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(4 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    15 as libc::c_int as libc::c_uchar,
    -(13 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(63 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(23 as libc::c_int) as libc::c_uchar,
    -(49 as libc::c_int) as libc::c_uchar,
    -(32 as libc::c_int) as libc::c_uchar,
    127 as libc::c_int as libc::c_uchar,
    -(57 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(97 as libc::c_int) as libc::c_uchar,
    -(25 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(4 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    15 as libc::c_int as libc::c_uchar,
    -(13 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(63 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(16 as libc::c_int) as libc::c_uchar,
    -(49 as libc::c_int) as libc::c_uchar,
    -(32 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(25 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(97 as libc::c_int) as libc::c_uchar,
    -(25 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(33 as libc::c_int) as libc::c_uchar,
    -(5 as libc::c_int) as libc::c_uchar,
    -(4 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    15 as libc::c_int as libc::c_uchar,
    -(13 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(64 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(9 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(7 as libc::c_int) as libc::c_uchar,
    -(49 as libc::c_int) as libc::c_uchar,
    -(32 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(25 as libc::c_int) as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    127 as libc::c_int as libc::c_uchar,
    -(97 as libc::c_int) as libc::c_uchar,
    -(25 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(33 as libc::c_int) as libc::c_uchar,
    -(5 as libc::c_int) as libc::c_uchar,
    -(4 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    15 as libc::c_int as libc::c_uchar,
    -(13 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(64 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(13 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(32 as libc::c_int) as libc::c_uchar,
    -(49 as libc::c_int) as libc::c_uchar,
    -(32 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(25 as libc::c_int) as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    127 as libc::c_int as libc::c_uchar,
    -(97 as libc::c_int) as libc::c_uchar,
    -(25 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(2 as libc::c_int) as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(49 as libc::c_int) as libc::c_uchar,
    -(13 as libc::c_int) as libc::c_uchar,
    -(4 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    15 as libc::c_int as libc::c_uchar,
    -(13 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(64 as libc::c_int) as libc::c_uchar,
    127 as libc::c_int as libc::c_uchar,
    -(7 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(119 as libc::c_int) as libc::c_uchar,
    -(17 as libc::c_int) as libc::c_uchar,
    -(15 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(25 as libc::c_int) as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    127 as libc::c_int as libc::c_uchar,
    -(97 as libc::c_int) as libc::c_uchar,
    -(25 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(2 as libc::c_int) as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(49 as libc::c_int) as libc::c_uchar,
    -(13 as libc::c_int) as libc::c_uchar,
    -(4 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    15 as libc::c_int as libc::c_uchar,
    -(13 as libc::c_int) as libc::c_uchar,
    -(3 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(64 as libc::c_int) as libc::c_uchar,
    127 as libc::c_int as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    -(2 as libc::c_int) as libc::c_uchar,
    15 as libc::c_int as libc::c_uchar,
    -(17 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(25 as libc::c_int) as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    127 as libc::c_int as libc::c_uchar,
    -(97 as libc::c_int) as libc::c_uchar,
    -(25 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(49 as libc::c_int) as libc::c_uchar,
    -(13 as libc::c_int) as libc::c_uchar,
    -(4 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    15 as libc::c_int as libc::c_uchar,
    -(13 as libc::c_int) as libc::c_uchar,
    -(3 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(64 as libc::c_int) as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(4 as libc::c_int) as libc::c_uchar,
    120 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    -(17 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(25 as libc::c_int) as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    127 as libc::c_int as libc::c_uchar,
    -(97 as libc::c_int) as libc::c_uchar,
    -(25 as libc::c_int) as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(57 as libc::c_int) as libc::c_uchar,
    -(29 as libc::c_int) as libc::c_uchar,
    -(4 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    15 as libc::c_int as libc::c_uchar,
    -(13 as libc::c_int) as libc::c_uchar,
    -(4 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(64 as libc::c_int) as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(4 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    15 as libc::c_int as libc::c_uchar,
    -(17 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(25 as libc::c_int) as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    127 as libc::c_int as libc::c_uchar,
    -(97 as libc::c_int) as libc::c_uchar,
    -(25 as libc::c_int) as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(57 as libc::c_int) as libc::c_uchar,
    -(29 as libc::c_int) as libc::c_uchar,
    -(4 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(13 as libc::c_int) as libc::c_uchar,
    -(4 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(64 as libc::c_int) as libc::c_uchar,
    31 as libc::c_int as libc::c_uchar,
    -(2 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    103 as libc::c_int as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(57 as libc::c_int) as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    127 as libc::c_int as libc::c_uchar,
    -(97 as libc::c_int) as libc::c_uchar,
    -(25 as libc::c_int) as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(57 as libc::c_int) as libc::c_uchar,
    -(29 as libc::c_int) as libc::c_uchar,
    -(4 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(13 as libc::c_int) as libc::c_uchar,
    -(4 as libc::c_int) as libc::c_uchar,
    127 as libc::c_int as libc::c_uchar,
    -(64 as libc::c_int) as libc::c_uchar,
    31 as libc::c_int as libc::c_uchar,
    -(2 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    15 as libc::c_int as libc::c_uchar,
    103 as libc::c_int as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(57 as libc::c_int) as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    127 as libc::c_int as libc::c_uchar,
    -(97 as libc::c_int) as libc::c_uchar,
    -(25 as libc::c_int) as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(61 as libc::c_int) as libc::c_uchar,
    -(61 as libc::c_int) as libc::c_uchar,
    -(4 as libc::c_int) as libc::c_uchar,
    127 as libc::c_int as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(29 as libc::c_int) as libc::c_uchar,
    -(4 as libc::c_int) as libc::c_uchar,
    127 as libc::c_int as libc::c_uchar,
    -(64 as libc::c_int) as libc::c_uchar,
    15 as libc::c_int as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    55 as libc::c_int as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(121 as libc::c_int) as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    127 as libc::c_int as libc::c_uchar,
    -(97 as libc::c_int) as libc::c_uchar,
    -(25 as libc::c_int) as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(61 as libc::c_int) as libc::c_uchar,
    -(61 as libc::c_int) as libc::c_uchar,
    -(4 as libc::c_int) as libc::c_uchar,
    127 as libc::c_int as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(29 as libc::c_int) as libc::c_uchar,
    -(4 as libc::c_int) as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    -(64 as libc::c_int) as libc::c_uchar,
    15 as libc::c_int as libc::c_uchar,
    -(32 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    23 as libc::c_int as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(2 as libc::c_int) as libc::c_uchar,
    3 as libc::c_int as libc::c_uchar,
    -(16 as libc::c_int) as libc::c_uchar,
    63 as libc::c_int as libc::c_uchar,
    15 as libc::c_int as libc::c_uchar,
    -(61 as libc::c_int) as libc::c_uchar,
    -(16 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    31 as libc::c_int as libc::c_uchar,
    -(127 as libc::c_int) as libc::c_uchar,
    -(127 as libc::c_int) as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    31 as libc::c_int as libc::c_uchar,
    -(1 as libc::c_int) as libc::c_uchar,
    -(127 as libc::c_int) as libc::c_uchar,
    -(8 as libc::c_int) as libc::c_uchar,
    31 as libc::c_int as libc::c_uchar,
    -(128 as libc::c_int) as libc::c_uchar,
    7 as libc::c_int as libc::c_uchar,
    -(128 as libc::c_int) as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
    0 as libc::c_int as libc::c_uchar,
];
#[inline]
unsafe extern "C" fn get_pixel(mut x: libc::c_int, mut y: libc::c_int) -> libc::c_int {
    return image_bitmap[((x >> 3 as libc::c_int) + y * image_row_length) as usize]
        as libc::c_int >> (!x & 0x7 as libc::c_int) & 1 as libc::c_int;
}
static mut bodyCount: libc::c_int = 0 as libc::c_int;
unsafe extern "C" fn update(mut space: *mut cpSpace, mut dt: libc::c_double) {
    cpSpaceStep(space, dt);
}
unsafe extern "C" fn DrawDot(mut body: *mut cpBody, mut unused: *mut libc::c_void) {
    ChipmunkDebugDrawDot(
        3.5f64 / ChipmunkDebugDrawPointLineScale as libc::c_double,
        cpBodyGetPosition(body),
        RGBAColor(
            0xee as libc::c_int as libc::c_float / 255.0f32,
            0xe8 as libc::c_int as libc::c_float / 255.0f32,
            0xd5 as libc::c_int as libc::c_float / 255.0f32,
            1.0f32,
        ),
    );
}
unsafe extern "C" fn draw(mut space: *mut cpSpace) {
    cpSpaceEachBody(
        space,
        Some(DrawDot as unsafe extern "C" fn(*mut cpBody, *mut libc::c_void) -> ()),
        0 as *mut libc::c_void,
    );
}
unsafe extern "C" fn make_ball(mut x: cpFloat, mut y: cpFloat) -> *mut cpShape {
    let mut body: *mut cpBody = cpBodyNew(1.0f64, ::std::f32::INFINITY as cpFloat);
    cpBodySetPosition(body, cpv(x, y));
    let mut shape: *mut cpShape = cpCircleShapeNew(body, 0.95f64, cpvzero);
    cpShapeSetElasticity(shape, 0.0f64);
    cpShapeSetFriction(shape, 0.0f64);
    return shape;
}
unsafe extern "C" fn init() -> *mut cpSpace {
    let mut space: *mut cpSpace = cpSpaceNew();
    cpSpaceSetIterations(space, 1 as libc::c_int);
    cpSpaceUseSpatialHash(space, 2.0f64, 10000 as libc::c_int);
    bodyCount = 0 as libc::c_int;
    let mut body: *mut cpBody = 0 as *mut cpBody;
    let mut shape: *mut cpShape = 0 as *mut cpShape;
    let mut y: libc::c_int = 0 as libc::c_int;
    while y < image_height {
        let mut x: libc::c_int = 0 as libc::c_int;
        while x < image_width {
            if !(get_pixel(x, y) == 0) {
                let mut x_jitter: cpFloat = 0.05f64 * frand();
                let mut y_jitter: cpFloat = 0.05f64 * frand();
                shape = make_ball(
                    2 as libc::c_int as libc::c_double
                        * ((x - image_width / 2 as libc::c_int) as libc::c_double
                            + x_jitter),
                    2 as libc::c_int as libc::c_double
                        * ((image_height / 2 as libc::c_int - y) as libc::c_double
                            + y_jitter),
                );
                cpSpaceAddBody(space, cpShapeGetBody(shape));
                cpSpaceAddShape(space, shape);
                bodyCount += 1;
                bodyCount;
            }
            x += 1;
            x;
        }
        y += 1;
        y;
    }
    body = cpSpaceAddBody(space, cpBodyNew(1e9f64, ::std::f32::INFINITY as cpFloat));
    cpBodySetPosition(
        body,
        cpv(-(1000 as libc::c_int) as cpFloat, -(10 as libc::c_int) as cpFloat),
    );
    cpBodySetVelocity(
        body,
        cpv(400 as libc::c_int as cpFloat, 0 as libc::c_int as cpFloat),
    );
    shape = cpSpaceAddShape(space, cpCircleShapeNew(body, 8.0f32 as cpFloat, cpvzero));
    cpShapeSetElasticity(shape, 0.0f64);
    cpShapeSetFriction(shape, 0.0f64);
    cpShapeSetFilter(shape, NOT_GRABBABLE_FILTER);
    bodyCount += 1;
    bodyCount;
    return space;
}
unsafe extern "C" fn destroy(mut space: *mut cpSpace) {
    ChipmunkDemoFreeSpaceChildren(space);
    cpSpaceFree(space);
}
pub static mut LogoSmash: ChipmunkDemo = unsafe {
    {
        let mut init = ChipmunkDemo {
            name: b"Logo Smash\0" as *const u8 as *const libc::c_char,
            timestep: 1.0f64 / 60.0f64,
            initFunc: Some(init as unsafe extern "C" fn() -> *mut cpSpace),
            updateFunc: Some(
                update as unsafe extern "C" fn(*mut cpSpace, libc::c_double) -> (),
            ),
            drawFunc: Some(draw as unsafe extern "C" fn(*mut cpSpace) -> ()),
            destroyFunc: Some(destroy as unsafe extern "C" fn(*mut cpSpace) -> ()),
        };
        init
    }
};
